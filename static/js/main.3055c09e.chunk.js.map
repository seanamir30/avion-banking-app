{"version":3,"sources":["loginImage.svg","components/TransactionAlert.js","components/Logo.js","components/LoginPage.js","components/AddAccountModal.js","components/AccountsTable.js","components/Withdraw.js","components/Transfer.js","components/Deposit.js","components/Admin.js","components/Card.js","components/ClientDeposit.js","components/ClientWithdraw.js","components/ClientTransfer.js","components/TransactionHistory.js","components/Graph.js","components/GambleModal.js","components/HomePage.js","components/NotFound.js","components/Unauthorized.js","App.js","reportWebVitals.js","index.js"],"names":["TransactionError","aDelay","sAnimationDelay","sAlert","message","severity","console","log","Fade","in","Alert","onClose","setTimeout","variant","className","Logo","id","class","LoginPage","useState","alert","setAlert","animationDelay","setAnimationDelay","history","useHistory","email","setEmail","password","setPassword","TransactionAlert","src","loginImage","alt","onSubmit","key","localStorage","verify","JSON","parse","getItem","isAdmin","isLoggedIn","setItem","stringify","push","pathname","state","type","placeholder","value","onChange","e","target","htmlFor","AddAccountModal","updateTable","balance","setBalance","name","setName","setSeverity","addAccount","d","Date","date","getDate","month","getMonth","currentDate","Math","floor","random","toString","transactions","balanceHistory","tabIndex","required","onClick","AccountsTable","allAccounts","map","account","style","color","cursor","removeItem","reverse","Withdraw","accountName","setAccountName","accountNumber","setAccountNumber","amount","setAmount","confirmationModal","setConfirmationModal","alertHandler","tabindex","onWheel","blur","Modal","open","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Box","dateToBeSaved","title","saveToTransactionHistory","Transfer","senderAccountNumber","setSenderAccountNumber","receiverAccountNumber","setReceiverAccountNumber","senderAccount","receiverAccount","senderName","setSenderName","receiverName","setReceiverName","handleTransfer","parseFloat","Deposit","Accounts","adminAccess","allAccountsChecked","setAllAccountsChecked","accounts","setAllAccounts","i","length","role","AccountBalance","Sync","LocalAtm","Card","num","user","Number","toFixed","ClientDeposit","props","errorMessage","refreshCheck","refresher","ClientWithdraw","ClientTransfer","receipientAccountNumber","setReceipientAccountNumber","addZeroes","TransactionHistory","transaction","Graph","setOpen","useStyles","makeStyles","modal","display","alignItems","justifyContent","data","classes","LineChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","YAxis","Tooltip","CartesianGrid","strokeDasharray","Line","dot","stroke","strokeWidth","activeDot","r","Legend","GambleModal","randomNumber","setRandomNumber","toggle","setToggle","inputNum","setInputNum","useEffect","counter","setInterval","clearInterval","fontSize","HomePage","passedState","useLocation","graphModal","setGraphModal","refresh","setRefresh","Timeline","NotFound","window","back","Unauthorized","App","exact","path","component","Admin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3055c09e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loginImage.52c1248c.svg\";","import Alert from '@material-ui/lab/Alert';\r\nimport { Fade } from '@material-ui/core';\r\n\r\nconst TransactionError = ({ aDelay, sAnimationDelay, sAlert, message, severity }) => {\r\n  console.log(severity)\r\n    return (\r\n        <Fade in={aDelay === true}><Alert onClose={() => { sAnimationDelay(false); setTimeout(function () { sAlert(false) }, 500) }} variant=\"filled\" severity={severity} className=\"position-fixed bottom-0 start-50 translate-middle z-top mt-5\">\r\n        {message}\r\n      </Alert></Fade>\r\n    )\r\n}\r\n\r\nexport default TransactionError\r\n","import React from 'react'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div id=\"logo\">\r\n            <span className=\"insta\"><i class=\"fas fa-dice\"></i> Insta</span><span className=\"cash\">Cash</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport loginImage from \"../loginImage.svg\"\r\nimport TransactionAlert from \"./TransactionAlert\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst LoginPage = () => {\r\n  const [alert, setAlert] = useState(\"\");\r\n  const [animationDelay, setAnimationDelay] = useState(\"\");\r\n  let history = useHistory();\r\n  // Handles Login\r\n  const handleLogin = () => {\r\n    try {\r\n      for (let key in localStorage) {\r\n        let verify = JSON.parse(localStorage.getItem(key));\r\n        console.log(verify.email === email);\r\n        if (verify.email === email) {\r\n          if (verify.password === password) {\r\n            if (verify.isAdmin) {\r\n              verify.isLoggedIn = true;\r\n              localStorage.setItem(key,JSON.stringify(verify))\r\n              history.push({ pathname: \"/admin\", state: { verify } });\r\n              console.log(\"An admin logged in!\");\r\n              break;\r\n            } else {\r\n              history.push({ pathname: \"/home\", state: { verify } });\r\n              console.log(\"Logged in!\");\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } catch {\r\n      setAlert(true);\r\n      setAnimationDelay(true);\r\n    }\r\n  };\r\n\r\n  //\r\n\r\n  // This is where the user's input from the form is saved\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  //\r\n\r\n  return (\r\n    <div className=\"vh-100\">\r\n      {alert? <TransactionAlert\r\n        aDelay={animationDelay}\r\n        sAnimationDelay={setAnimationDelay}\r\n        sAlert={setAlert}\r\n        message=\"Incorrect email or password\"\r\n        severity=\"error\"\r\n      /> :<></>}\r\n      <Logo/>\r\n      <div className=\"container py-5 h-100\">\r\n        <div className=\"row d-flex align-items-center justify-content-center h-100\">\r\n          <div className=\"col-md-8 col-log-7 col-xl-7 text-center\">\r\n            <img src={loginImage} alt=\"login\" className=\"loginImage\"/>\r\n          </div>\r\n          <div className=\"col-md-7 col-lg-5 col-xl-5\">\r\n            <div className=\"card shadow\">\r\n            <div className=\"card-body\">\r\n            <form onSubmit={handleLogin}>\r\n              <div className=\"form-floating mb-4\">\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"emailInput\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Enter your email here!\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <label className=\"form-label\" htmlFor=\"emailInput\">\r\n                  Email address\r\n                </label>\r\n              </div>\r\n              <div className=\"form-floating mb-4\">\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"passwordInput\"\r\n                  className=\"form-control form-control-lg\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <label className=\"form-label\" htmlFor=\"passwordInput\">\r\n                  Password\r\n                </label>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn login btn-danger\">\r\n                LOG IN\r\n              </button>\r\n            </form>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { useState } from \"react\";\r\nimport TransactionAlert from \"./TransactionAlert\";\r\n\r\nconst AddAccountModal = ({ updateTable }) => {\r\n  // Saves a new user to local storage\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [balance, setBalance] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [alert, setAlert] = useState(\"\");\r\n  const [severity, setSeverity] = useState(\"\");\r\n  const [animationDelay, setAnimationDelay] = useState(\"\");\r\n\r\n  function addAccount() {\r\n    let d = new Date();\r\n    let date = d.getDate();\r\n    let month = d.getMonth()+1;\r\n    let currentDate = `${month}/${date}`;\r\n    let id = (Math.floor(Math.random() * 9000000000) + 1000000000).toString();\r\n    localStorage.setItem(\r\n      id,\r\n      JSON.stringify({\r\n        id: id,\r\n        email: email,\r\n        password: password,\r\n        isAdmin: false,\r\n        balance: balance,\r\n        name: name,\r\n        transactions: [],\r\n        balanceHistory: [{\"name\":currentDate, \"balance\":balance}],\r\n      })\r\n    );\r\n    setEmail('')\r\n    setPassword('')\r\n    setBalance(0)\r\n    setName('')\r\n    updateTable()\r\n    setSeverity(\"success\");\r\n    setAlert(true);\r\n    setAnimationDelay(true);\r\n  }\r\n  //\r\n\r\n\r\n\r\n  const alertHandler = () => {\r\n    let errorMessage = \"\";\r\n    errorMessage = \"An account has been added!\";\r\n    setTimeout(() => {\r\n      setAnimationDelay(false);\r\n      setTimeout(() => {\r\n        setAlert(false);\r\n      }, 500);\r\n    }, 5000);\r\n    return (\r\n      <TransactionAlert\r\n        aDelay={animationDelay}\r\n        sAnimationDelay={setAnimationDelay}\r\n        sAlert={setAlert}\r\n        message={errorMessage}\r\n        severity={severity}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alert ? alertHandler() : <></>}\r\n      <div className=\"modal fade\" tabIndex=\"-1\" id=\"AddAccountModal\">\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title display-2\">Add Account</h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <form onSubmit={addAccount}>\r\n              <div className=\"modal-body\">\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"name\" className=\"form-label\">\r\n                    Name\r\n                  </label>\r\n                  <input\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    id=\"name\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"email\" className=\"form-label\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    className=\"form-control\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    id=\"email\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"password\" className=\"form-label\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    className=\"form-control\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    id=\"password\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"initialBalance\" className=\"form-label\">\r\n                    Initial Balance\r\n                  </label>\r\n                  <input\r\n                    value={balance}\r\n                    onChange={(e) => setBalance(e.target.value)}\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    placeholder=\"Initial Balance\"\r\n                    id=\"initialBalance\"\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" onClick={addAccount} className=\"btn btn-danger\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\">\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAccountModal;\r\n","import { useState, useRef } from \"react\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\n\r\nconst AccountsTable = ({updateTable,allAccounts}) => {\r\n\r\n\r\n  const handleDelete = (key) => {\r\n    localStorage.removeItem(key);\r\n    updateTable();\r\n  };\r\n\r\n  return (\r\n    <tbody  className=\"accountsTable\">\r\n      {allAccounts\r\n        .map((account) => (\r\n          <tr key={account.id}>\r\n            <td>{account.name}</td>\r\n            <td>{account.id}</td>\r\n            <td>{account.balance}</td>\r\n            <td className=\"deleteCol\">\r\n              <DeleteForeverIcon\r\n                style={{ color: \"#dc3545\", cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  handleDelete(account.id);\r\n                }}\r\n              />\r\n            </td>\r\n          </tr>\r\n        ))\r\n        .reverse()}\r\n    </tbody>\r\n  );\r\n};\r\n\r\nexport default AccountsTable;\r\n","import { useState } from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Fade, Modal, Backdrop, Box } from \"@material-ui/core\";\r\nimport TransactionAlert from \"./TransactionAlert\";\r\n\r\nconst Withdraw = ({updateTable}) => {\r\n  const [alert, setAlert] = useState(\"\");\r\n  const [animationDelay, setAnimationDelay] = useState(\"\");\r\n  const [accountName, setAccountName] = useState(\"\");\r\n  const [severity, setSeverity] = useState(\"\");\r\n  const [accountNumber, setAccountNumber] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const [confirmationModal, setConfirmationModal] = useState('');\r\n  let account = JSON.parse(localStorage.getItem(accountNumber));\r\n\r\n  const saveToTransactionHistory = () => {\r\n    let d = new Date();\r\n    let date = d.getDate();\r\n    let month = d.getMonth() + 1;\r\n    let dateToBeSaved = `${month}/${date}`;\r\n    let transactions = account.transactions;\r\n    transactions.push({\r\n      title: \"Withdraw\",\r\n      date: dateToBeSaved,\r\n      amount: `-${amount}`,\r\n    });\r\n    localStorage.setItem(account.id, JSON.stringify(account));\r\n  };\r\n\r\n  const alertHandler = () => {\r\n    let message = ''\r\n    if (severity === 'error') {\r\n      !account ? message = \"The account number you have entered is invalid\" : account.balance > amount || amount === 0 ? message = \"Please enter a valid amount\" : message = \"Sorry, you got insufficient funds for your request\"\r\n    }\r\n    else { message = \"You have withdrawn successfully!\" }\r\n    setTimeout(() => { setAnimationDelay(false); setTimeout(() => { setAlert(false) }, 500) }, 5000)\r\n    return <TransactionAlert aDelay={animationDelay} sAnimationDelay={setAnimationDelay} sAlert={setAlert} message={message} severity={severity} />\r\n  }\r\n\r\n  const handleWithdraw = () => {\r\n    account.balance -= amount;\r\n    localStorage.setItem(accountNumber, JSON.stringify(account));\r\n    setConfirmationModal(false)\r\n    saveToTransactionHistory();\r\n    setAccountNumber('')\r\n    setAmount('')\r\n    updateTable()\r\n    setSeverity(\"success\")\r\n    setAlert(true);\r\n    setAnimationDelay(true);\r\n  };\r\n  const handleDisplayName = () => {\r\n    if (account !== null && account.balance > amount && amount !== 0) {\r\n      setAccountName(account.name);\r\n      setConfirmationModal(true)\r\n    }\r\n    else {\r\n      setSeverity(\"error\")\r\n      setAlert(true);\r\n      setAnimationDelay(true);\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alert ? alertHandler() : <></>}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"withdrawModal\"\r\n        tabindex=\"-1\"\r\n        aria-labelledby=\"withdrawModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"withdrawModalLabel\">\r\n                Withdraw\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"col-xl p-2\">\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"accountNumber\" className=\"form-label\">\r\n                    Account Number\r\n                  </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    id=\"accountNumber\"\r\n                    type=\"number\"\r\n                    onWheel={(e) => e.target.blur()}\r\n                    placeholder=\" Enter Account Number Here\"\r\n                    value={accountNumber}\r\n                    onChange={(e) => setAccountNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"amount\" className=\"form-label\">\r\n                    Amount\r\n                  </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    id=\"amount\"\r\n                    type=\"number\"\r\n                    onWheel={(e) => e.target.blur()}\r\n                    placeholder=\" Enter Amount Here\"\r\n                    value={amount}\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                data-bs-dismiss=\"modal\"\r\n                onClick={handleDisplayName}\r\n              >\r\n                Withdraw\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        open={confirmationModal}\r\n        onClose={() => { setConfirmationModal(false) }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={confirmationModal}>\r\n          <Box className=\"confirmationModal\">\r\n              <div className=\"modal-dialog modal-dialog-centered\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"confirmWithdrawModalLabel\">\r\n                      Transaction Details\r\n                    </h5>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn-close\"\r\n                      onClick={() => { setConfirmationModal(false) }}\r\n                    ></button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    <p className=\"lbl-1\">\r\n                      Account Name: <span className=\"lbl-2\">{accountName}</span>\r\n                    </p>\r\n                    <p className=\"lbl-1\">\r\n                      Account Number: <span className=\"lbl-2\">{accountNumber}</span>\r\n                    </p>\r\n                    <p className=\"lbl-1\">\r\n                      Withdraw Amount: <span className=\"lbl-2\">&#x20B1;{amount}</span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                      onClick={handleWithdraw}\r\n                    >\r\n                      CONFIRM\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </Box>\r\n        </Fade>\r\n      </Modal>\r\n      {/* <div\r\n        className=\"modal fade\"\r\n        id=\"confirmWithdrawModal\"\r\n        tabindex=\"-1\"\r\n        aria-labelledby=\"confirmWithdrawModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"confirmWithdrawModalLabel\">\r\n                Transaction Details\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p className=\"lbl-1\">\r\n                Account Name: <span className=\"lbl-2\">{accountName}</span>\r\n              </p>\r\n              <p className=\"lbl-1\">\r\n                Account Number: <span className=\"lbl-2\">{accountNumber}</span>\r\n              </p>\r\n              <p className=\"lbl-1\">\r\n                Withdraw Amount: <span className=\"lbl-2\">&#x20B1;{amount}</span>\r\n              </p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                onClick={handleWithdraw}\r\n              >\r\n                CONFIRM\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Withdraw;\r\n\r\n// <div\r\n// className=\"modal fade\"\r\n// id=\"withdrawModal\"\r\n// tabindex=\"-1\"\r\n// aria-labelledby=\"withdrawModalLabel\"\r\n// aria-hidden=\"true\"\r\n// >\r\n// <div className=\"modal-dialog modal-dialog-centered\">\r\n//   <div className=\"modal-content\">\r\n//     <div className=\"modal-header\">\r\n//       <h5 className=\"modal-title\" id=\"withdrawModalLabel\">\r\n//         Withdraw\r\n//       </h5>\r\n//       <button\r\n//         type=\"button\"\r\n//         class=\"btn-close\"\r\n//         data-bs-dismiss=\"modal\"\r\n//         aria-label=\"Close\"\r\n//       ></button>\r\n//     </div>\r\n//     <div className=\"modal-body\">\r\n\r\n//       </div>\r\n//     </div>\r\n//     <div className=\"modal-footer\">\r\n//       <button\r\n//         type=\"button\"\r\n//         className=\"btn btn-success\"\r\n//         onClick={handleWithdraw}\r\n//       >\r\n//         Withdraw\r\n//       </button>\r\n//     </div>\r\n//   </div>\r\n// </div>\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport TransactionAlert from \"./TransactionAlert\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Fade, Modal, Backdrop, Box } from \"@material-ui/core\";\r\n\r\nconst Transfer = ({ updateTable }) => {\r\n  const [alert, setAlert] = useState(\"\");\r\n  const [animationDelay, setAnimationDelay] = useState(\"\");\r\n  const [severity, setSeverity] = useState(\"\");\r\n  const [senderAccountNumber, setSenderAccountNumber] = useState(\"\");\r\n  const [receiverAccountNumber, setReceiverAccountNumber] = useState(\"\");\r\n  const [confirmationModal, setConfirmationModal] = useState('');\r\n  let senderAccount = JSON.parse(localStorage.getItem(senderAccountNumber));\r\n  let receiverAccount = JSON.parse(localStorage.getItem(receiverAccountNumber));\r\n\r\n  const [senderName, setSenderName] = useState(\"\");\r\n  const [receiverName, setReceiverName] = useState(\"\");\r\n\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const saveToTransactionHistory = () => {\r\n    \r\n    let d = new Date();\r\n    let date = d.getDate();\r\n    let month = d.getMonth() + 1;\r\n    let dateToBeSaved = `${month}/${date}`;\r\n    let transactions = senderAccount.transactions;\r\n    transactions.push({\r\n      title: \"Transfer\",\r\n      date: dateToBeSaved,\r\n      amount: `-${amount}`,\r\n    });\r\n    localStorage.setItem(senderAccount.id, JSON.stringify(senderAccount));\r\n    transactions = receiverAccount.transactions;\r\n    transactions.push({\r\n      title: \"Transfer\",\r\n      date: dateToBeSaved,\r\n      amount: `+${amount}`,\r\n    });\r\n    localStorage.setItem(receiverAccount.id, JSON.stringify(receiverAccount));\r\n  };\r\n\r\n  const alertHandler = () => {\r\n    let message = ''\r\n    if (severity === 'error') {\r\n      !senderAccount || !receiverAccount ? message = \"The account number you have entered is invalid\" : senderAccount.balance > amount || receiverAccount.balance > amount || amount === 0 ? message = \"Please enter a valid amount\" : message = \"Sorry, you got insufficient funds for your request\"\r\n    }\r\n    else { message = \"You have transferred successfully!\" }\r\n    setTimeout(() => { setAnimationDelay(false); setTimeout(() => { setAlert(false) }, 500) }, 5000)\r\n    return <TransactionAlert aDelay={animationDelay} sAnimationDelay={setAnimationDelay} sAlert={setAlert} message={message} severity={severity} />\r\n  }\r\n\r\n  const handleTransfer = () => {\r\n    senderAccount.balance =\r\n      parseFloat(senderAccount.balance) - parseFloat(amount);\r\n    receiverAccount.balance =\r\n      parseFloat(receiverAccount.balance) + parseFloat(amount);\r\n\r\n    localStorage.setItem(senderAccountNumber, JSON.stringify(senderAccount));\r\n    localStorage.setItem(\r\n      receiverAccountNumber,\r\n      JSON.stringify(receiverAccount)\r\n    );\r\n    setReceiverAccountNumber('')\r\n    setSenderAccountNumber('')\r\n    setAmount('')\r\n    saveToTransactionHistory();\r\n    updateTable()\r\n    setConfirmationModal(false)\r\n    setSeverity(\"success\")\r\n    setAlert(true);\r\n    setAnimationDelay(true);\r\n  };\r\n\r\n  const handleDisplayName = () => {\r\n    if (senderAccount !== null && senderAccount.balance > amount && amount > 0 && senderAccount !== receiverAccount) {\r\n      setReceiverName(receiverAccount.name);\r\n      setSenderName(senderAccount.name);\r\n      setConfirmationModal(true)\r\n    }\r\n    else {\r\n      setSeverity(\"error\")\r\n      setAlert(true);\r\n      setAnimationDelay(true);\r\n    }\r\n\r\n  };\r\n  return (\r\n    <>\r\n      {alert ? alertHandler() : <></>}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"transferModal\"\r\n        tabindex=\"-1\"\r\n        aria-labelledby=\"transferModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered \">\r\n          <div className=\"modal-content \">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"transferModalLabel\">\r\n                Transfer\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"col-xl p-2\">\r\n                <h3 className=\"m-0 pl-2\">Sender</h3>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Account Number</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    onWheel={(e) => e.target.blur()}\r\n                    placeholder=\" Enter Account Number Here\"\r\n                    value={senderAccountNumber}\r\n                    onChange={(e) => setSenderAccountNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n                <h3 className=\"m-0 pl-2\">Receiver</h3>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Account Number</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    onWheel={(e) => e.target.blur()}\r\n                    placeholder=\" Enter Account Number Here\"\r\n                    value={receiverAccountNumber}\r\n                    onChange={(e) => setReceiverAccountNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <h3>Amount</h3>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    onWheel={(e) => e.target.blur()}\r\n                    placeholder=\" Enter Amount Here\"\r\n                    value={amount}\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  onClick={handleDisplayName}\r\n                >\r\n                  Transfer\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"confirmTransferModal\"\r\n          tabindex=\"-1\"\r\n          aria-labelledby=\"confirmTransferModalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"confirmTransferModalLabel\">\r\n                  Transaction Details\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <h3 className=\"m-0 pl-2\">Sender</h3>\r\n                <p className=\"lbl-1 mb-0\">\r\n                  Account Name: <span className=\"lbl-2\"> {senderName}</span>\r\n                </p>\r\n                <p className=\"lbl-1\">\r\n                  Account Number:\r\n                  <span className=\"lbl-2\"> {senderAccountNumber}</span>\r\n                </p>\r\n\r\n                <h3 className=\"m-0 pl-2 pt-2 border-top\">Receipient</h3>\r\n                <p className=\"lbl-1 mb-0\">\r\n                  Account Name: <span className=\"lbl-2\">{receiverName}</span>\r\n                </p>\r\n                <p className=\"lbl-1\">\r\n                  Account Number:\r\n                  <span className=\"lbl-2\"> {receiverAccountNumber}</span>\r\n                </p>\r\n\r\n                <p className=\"lbl-1 border-top pt-3 mb-0\">\r\n                  Transfer Amount:{\" \"}\r\n                  <span className=\"lbl-2\">&#x20B1;{amount}</span>\r\n                </p>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  onClick={handleTransfer}\r\n                >\r\n                  Confirm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Modal\r\n          open={confirmationModal}\r\n          onClose={() => { setConfirmationModal(false) }}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={confirmationModal}>\r\n            <Box className=\"confirmationModal\">\r\n              <div className=\"modal-dialog modal-dialog-centered\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"confirmTransferModalLabel\">\r\n                      Transaction Details\r\n                    </h5>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn-close\"\r\n                      onClick={() => { setConfirmationModal(false) }}\r\n                    ></button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    <h3 className=\"m-0 pl-2\">Sender</h3>\r\n                    <p className=\"lbl-1 mb-0\">\r\n                      Account Name: <span className=\"lbl-2\"> {senderName}</span>\r\n                    </p>\r\n                    <p className=\"lbl-1\">\r\n                      Account Number:\r\n                      <span className=\"lbl-2\"> {senderAccountNumber}</span>\r\n                    </p>\r\n\r\n                    <h3 className=\"m-0 pl-2 pt-2 border-top\">Receipient</h3>\r\n                    <p className=\"lbl-1 mb-0\">\r\n                      Account Name: <span className=\"lbl-2\">{receiverName}</span>\r\n                    </p>\r\n                    <p className=\"lbl-1\">\r\n                      Account Number:\r\n                      <span className=\"lbl-2\"> {receiverAccountNumber}</span>\r\n                    </p>\r\n\r\n                    <p className=\"lbl-1 border-top pt-3 mb-0\">\r\n                      Transfer Amount: <span className=\"lbl-2\">&#x20B1;{amount}</span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                      onClick={handleTransfer}\r\n                    >\r\n                      CONFIRM\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n          </Fade>\r\n        </Modal>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Transfer;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport TransactionAlert from \"./TransactionAlert\";\r\nimport { Fade, Modal, Backdrop, Box } from \"@material-ui/core\";\r\n\r\nconst Deposit = ({ updateTable }) => {\r\n  const [alert, setAlert] = useState(\"\");\r\n  const [animationDelay, setAnimationDelay] = useState(\"\");\r\n  const [accountNumber, setAccountNumber] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const [accountName, setAccountName] = useState(\"\");\r\n  const [severity, setSeverity] = useState(0);\r\n  const [confirmationModal, setConfirmationModal] = useState('');\r\n\r\n\r\n\r\n  let account = JSON.parse(localStorage.getItem(accountNumber));\r\n  const saveToTransactionHistory = () => {\r\n    let d = new Date();\r\n    let date = d.getDate();\r\n    let month = d.getMonth() + 1;\r\n    let dateToBeSaved = `${month}/${date}`;\r\n    let transactions = account.transactions;\r\n    transactions.push({\r\n      title: \"Deposit\",\r\n      date: dateToBeSaved,\r\n      amount: `+${amount}`,\r\n    });\r\n    localStorage.setItem(account.id, JSON.stringify(account));\r\n  };\r\n\r\n  const alertHandler = () => {\r\n    let message = ''\r\n    if (severity === 'error') {\r\n      !account ? message = \"The account number you have entered is invalid\" : account.balance > amount || amount === 0 ? message = \"Please enter a valid amount\" : message = \"Sorry, you got insufficient funds for your request\"\r\n    }\r\n    else { message = \"You have deposited successfully!\" }\r\n    setTimeout(() => { setAnimationDelay(false); setTimeout(() => { setAlert(false) }, 500) }, 5000)\r\n    return <TransactionAlert aDelay={animationDelay} sAnimationDelay={setAnimationDelay} sAlert={setAlert} message={message} severity={severity} />\r\n  }\r\n\r\n  const handleDeposit = () => {\r\n    account.balance = parseFloat(account.balance) + parseFloat(amount);\r\n    localStorage.setItem(accountNumber, JSON.stringify(account));\r\n    saveToTransactionHistory();\r\n    setConfirmationModal(false)\r\n    setAccountNumber('')\r\n    setAmount('')\r\n    updateTable()\r\n    setSeverity(\"success\")\r\n    setAlert(true);\r\n    setAnimationDelay(true);\r\n  };\r\n\r\n  const handleDisplayName = () => {\r\n    if (account !== null && amount !== 0) {\r\n      setAccountName(account.name);\r\n      setConfirmationModal(true)\r\n    }\r\n    else {\r\n      setSeverity(\"error\")\r\n      setAlert(true);\r\n      setAnimationDelay(true);\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alert ? alertHandler() : <></>}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"depositModal\"\r\n        tabindex=\"-1\"\r\n        aria-labelledby=\"depositModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"depositModalLabel\">\r\n                Deposit\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"col-xl p-2\">\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Account Number</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    onWheel={(e) => e.target.blur()}\r\n                    placeholder=\" Enter Account Number Here\"\r\n                    value={accountNumber}\r\n                    onChange={(e) => setAccountNumber(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label className=\"form-label\">Amount</label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    onWheel={(e) => e.target.blur()}\r\n                    placeholder=\" Enter Amount Here\"\r\n                    value={amount}\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  onClick={handleDisplayName}\r\n                >\r\n                  Deposit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          open={confirmationModal}\r\n          onClose={() => { setConfirmationModal(false) }}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={confirmationModal}>\r\n            <Box className=\"confirmationModal\">\r\n              <div className=\"modal-dialog modal-dialog-centered\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"confirmDepositModalLabel\">\r\n                      Transaction Details\r\n                    </h5>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn-close\"\r\n                      onClick={()=>{ setConfirmationModal(false)}}\r\n                    ></button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    <p className=\"lbl-1\">\r\n                      Account Name: <span className=\"lbl-2\">{accountName}</span>\r\n                    </p>\r\n                    <p className=\"lbl-1\">\r\n                      Account Number: <span className=\"lbl-2\">{accountNumber}</span>\r\n                    </p>\r\n                    <p className=\"lbl-1\">\r\n                      Deposit Amount: <span className=\"lbl-2\">&#x20B1;{amount}</span>\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"modal-footer\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-danger\"\r\n                      onClick={handleDeposit}\r\n                    >\r\n                      Confirm\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n          </Fade>\r\n        </Modal>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Deposit;\r\n","import AddAccountModal from \"./AddAccountModal\";\r\nimport { useState } from \"react\";\r\nimport AccountsTable from \"./AccountsTable\";\r\nimport Withdraw from \"./Withdraw\";\r\nimport Transfer from \"./Transfer\";\r\nimport Deposit from \"./Deposit\";\r\nimport { LocalAtm, Sync, AccountBalance } from \"@material-ui/icons\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport Logo from \"./Logo\";\r\n\r\nconst Accounts = () => {\r\n\r\n  const adminAccess = JSON.parse(localStorage.getItem('00'))\r\n  const [allAccountsChecked, setAllAccountsChecked] = useState(false);\r\n  let accounts = [];\r\n  const [allAccounts, setAllAccounts] = useState(accounts);\r\n  const history = useHistory()\r\n  if (adminAccess.isLoggedIn) {\r\n\r\n    const signOut = () => {\r\n      adminAccess.isLoggedIn = false;\r\n      localStorage.setItem('00',JSON.stringify(adminAccess))\r\n      history.push({pathname:\"/\"})\r\n    }\r\n\r\n\r\n    if (!allAccountsChecked) {\r\n      for (let i = 0; i < localStorage.length; i++) {\r\n        let account = JSON.parse(localStorage.getItem(localStorage.key(i)));\r\n        if (!account.isAdmin) accounts.push(account);\r\n      }\r\n      setAllAccountsChecked(true);\r\n      setAllAccounts([...accounts]);\r\n    }\r\n\r\n    const updateTable = () => {\r\n      setAllAccounts([...accounts]);\r\n      setAllAccountsChecked(false);\r\n      console.log(\"update\");\r\n    };\r\n\r\n    return (\r\n      <div className=\"container mt-3\">\r\n        <Logo />\r\n        <AddAccountModal updateTable={updateTable} />\r\n        <h2 className=\"text-center display-5\">All Accounts</h2>\r\n        <table className=\"table text-center\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Account Number</th>\r\n              <th>Balance</th>\r\n              <th className=\"deleteCol\"></th>\r\n            </tr>\r\n          </thead>\r\n          <AccountsTable allAccounts={allAccounts} updateTable={updateTable} />\r\n        </table>\r\n        <Withdraw updateTable={updateTable} />\r\n        <Transfer updateTable={updateTable} />\r\n\r\n        <div className=\"d-flex flex-column align-items-center\">\r\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Nav\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#depositModal\"\r\n            >\r\n              <AccountBalance />\r\n              <br />\r\n              Deposit\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#transferModal\"\r\n            >\r\n              <Sync />\r\n              <br />\r\n              Transfer\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#withdrawModal\"\r\n            >\r\n              <LocalAtm />\r\n              <br />\r\n              Withdraw\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger\"\r\n              data-bs-toggle=\"modal\"\r\n              data-bs-target=\"#AddAccountModal\"\r\n            >\r\n              <AddIcon />\r\n              <br />\r\n              Add Account\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-danger\"\r\n              onClick={signOut}\r\n            >\r\n              <i class=\"fas fa-sign-out-alt \"></i>\r\n              <br />\r\n              Sign Out\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <Deposit updateTable={updateTable} />\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    history.push({ pathname: \"/unauthorized\" })\r\n    return null\r\n  }\r\n};\r\n\r\nexport default Accounts;\r\n","import { useHistory } from \"react-router\";\r\n\r\nconst Card = ({ id }) => {\r\n  const user = JSON.parse(localStorage.getItem(id));\r\n  const history = useHistory()\r\n  function addZeroes(num) {\r\n    return Number(num).toFixed(2)\r\n  }\r\n  console.log(id);\r\n  return (\r\n    <div class=\"card_\">\r\n      <div class=\"card__front card__part\">\r\n        <p class=\"card__info card__space-75\">\r\n        <i class=\"fas fa-dice\"></i> INSTACASH\r\n        </p>\r\n        <p class=\"card__space-25 text-end\">\r\n        <i class=\"fas fa-sign-out-alt\" onClick={()=>history.push({pathname:\"/\"})}></i>\r\n        </p>\r\n        <p class=\"card_number\">\r\n          <div class=\"card__label\">Account Number</div>\r\n          {user.id}\r\n        </p>\r\n        <div class=\"card__space-75\">\r\n          <span class=\"card__label\">Card holder</span>\r\n          <p class=\"card__info\">{user.name}</p>\r\n        </div>\r\n        <div class=\"card__space-25\">\r\n          <span class=\"card__label\">Balance</span>\r\n          <p class=\"card__info\">₱{addZeroes(user.balance)}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport { useState } from \"react\";\r\nimport TransactionAlert from \"./TransactionAlert\";\r\nimport { Fade, Modal, Backdrop, Box } from \"@material-ui/core\";\r\n\r\nconst ClientDeposit = (props) => {\r\n  const [amount, setAmount] = useState(0);\r\n  const [alert, setAlert] = useState(\"\");\r\n  const [animationDelay, setAnimationDelay] = useState(\"\");\r\n  const [confirmationModal, setConfirmationModal] = useState('');\r\n  let account = JSON.parse(localStorage.getItem(props.accountNumber));\r\n  const [severity, setSeverity] = useState(\"\");\r\n\r\n\r\n  function addZeroes(num) {\r\n    return Number(num).toFixed(2)\r\n  }\r\n\r\n  const saveToTransactionHistory = () => {\r\n    let d = new Date();\r\n    let date = d.getDate();\r\n    let month = d.getMonth() + 1;\r\n    let dateToBeSaved = `${month}/${date}`;\r\n    let transactions = account.transactions;\r\n    transactions.push({\r\n      title: \"Deposit\",\r\n      date: dateToBeSaved,\r\n      amount: `+${addZeroes(Number(amount))}`,\r\n    });\r\n    localStorage.setItem(account.id, JSON.stringify(account));\r\n  };\r\n\r\n  const alertHandler = () => {\r\n    let errorMessage = \"\";\r\n    if (severity === \"error\") {\r\n      errorMessage = \"Please enter a valid amount\";\r\n    } else {\r\n      errorMessage = \"Your funds have been deposited!\";\r\n    }\r\n    setTimeout(() => {\r\n      setAnimationDelay(false);\r\n      setTimeout(() => {\r\n        setAlert(false);\r\n      }, 500);\r\n    }, 5000);\r\n    return (\r\n      <TransactionAlert\r\n        aDelay={animationDelay}\r\n        sAnimationDelay={setAnimationDelay}\r\n        sAlert={setAlert}\r\n        message={errorMessage}\r\n        severity={severity}\r\n      />\r\n    );\r\n  };\r\n\r\n  const toConfirmation = () => {\r\n    if (amount > 0) {\r\n      setConfirmationModal(true)\r\n    }\r\n    else {\r\n      setSeverity(\"error\");\r\n      setAlert(true);\r\n      setAnimationDelay(true);\r\n    }\r\n  }\r\n\r\n  const handleDeposit = () => {\r\n      account.balance = parseFloat(account.balance) + parseFloat(amount);\r\n      localStorage.setItem(props.accountNumber, JSON.stringify(account));\r\n      !props.refreshCheck ? props.refresher(true) : props.refresher(false);\r\n      saveToTransactionHistory();\r\n      setConfirmationModal(false)\r\n      setAlert(true);\r\n      setAnimationDelay(true);\r\n      setSeverity(\"success\");\r\n      setAmount(0)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alert ? alertHandler() : <></>}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"clientDepositModal\"\r\n        tabindex=\"-1\"\r\n        aria-labelledby=\"clientDepositModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"clientDepositModalLabel\">\r\n                Deposit\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <label htmlFor=\"amount\" className=\"form-label\">\r\n                Amount\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"amount\"\r\n                placeholder=\"Enter Amount Here\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                onClick={toConfirmation}\r\n                className=\"btn btn-danger\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Enter\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        open={confirmationModal}\r\n        onClose={() => { setConfirmationModal(false) }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={confirmationModal}>\r\n          <Box className=\"confirmationModal\">\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"confirmClientDepositModalLabel\">\r\n                    Transaction Details\r\n                  </h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-close\"\r\n                    onClick={()=>{setConfirmationModal(false)}}\r\n                    data-bs-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                  ></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <p className=\"lbl-1\">\r\n                    Account Name: <span className=\"lbl-2\">{account.name}</span>\r\n                  </p>\r\n                  <p className=\"lbl-1\">\r\n                    Account Number:{\" \"}\r\n                    <span className=\"lbl-2\">{props.accountNumber}</span>\r\n                  </p>\r\n                  <p className=\"lbl-1\">\r\n                    Deposit Amount: <span className=\"lbl-2\">&#x20B1;{amount}</span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    onClick={handleDeposit}\r\n                    data-bs-dismiss=\"modal\"\r\n                  >\r\n                    CONFIRM\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Box>\r\n        </Fade>\r\n      </Modal>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientDeposit;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport TransactionAlert from \"./TransactionAlert\";\r\nimport { Fade, Modal, Backdrop, Box } from \"@material-ui/core\";\r\n\r\nconst ClientWithdraw = (props) => {\r\n  const [amount, setAmount] = useState(0);\r\n  const [alert, setAlert] = useState(\"\");\r\n  const [animationDelay, setAnimationDelay] = useState(\"\");\r\n  const [confirmationModal, setConfirmationModal] = useState('');\r\n\r\n  let account = JSON.parse(localStorage.getItem(props.accountNumber));\r\n  const [severity, setSeverity] = useState(\"\");\r\n\r\n  function addZeroes(num) {\r\n    return Number(num).toFixed(2)\r\n  }\r\n\r\n  const saveToTransactionHistory = () => {\r\n    let d = new Date();\r\n    let date = d.getDate();\r\n    let month = d.getMonth() + 1;\r\n    let dateToBeSaved = `${month}/${date}`;\r\n    let transactions = account.transactions;\r\n    transactions.push({\r\n      title: \"Withdraw\",\r\n      date: dateToBeSaved,\r\n      amount: `-${addZeroes(Number(amount))}`,\r\n    });\r\n    localStorage.setItem(account.id, JSON.stringify(account));\r\n  };\r\n\r\n  const alertHandler = () => {\r\n    let message = \"\";\r\n    if (severity === \"error\") {\r\n      account.balance > amount\r\n        ? (message = \"Please enter a valid amount\")\r\n        : (message = \"Sorry, you got insufficient funds for your request\");\r\n    } else {\r\n      message = \"You have withdrawn successfully!\";\r\n    }\r\n    setTimeout(() => {\r\n      setAnimationDelay(false);\r\n      setTimeout(() => {\r\n        setAlert(false);\r\n      }, 500);\r\n    }, 5000);\r\n    return (\r\n      <TransactionAlert\r\n        aDelay={animationDelay}\r\n        sAnimationDelay={setAnimationDelay}\r\n        sAlert={setAlert}\r\n        message={message}\r\n        severity={severity}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleWithdraw = () => {\r\n    account.balance = parseFloat(account.balance) - parseFloat(amount);\r\n    localStorage.setItem(props.accountNumber, JSON.stringify(account));\r\n    !props.refreshCheck ? props.refresher(true) : props.refresher(false);\r\n    setConfirmationModal(false)\r\n    setAlert(true);\r\n    setAnimationDelay(true);\r\n    setSeverity(\"success\");\r\n    saveToTransactionHistory();\r\n    setAmount(0)\r\n  };\r\n\r\n  const toConfirmation = () => {\r\n    if (account.balance > amount && amount > 0) {\r\n      setConfirmationModal(true)\r\n    }\r\n    else {\r\n      setSeverity(\"error\");\r\n      setAlert(true);\r\n      setAnimationDelay(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {alert ? alertHandler() : <></>}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"clientWithdrawModal\"\r\n        tabindex=\"-1\"\r\n        aria-labelledby=\"clientWithdrawModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"clientWithdrawModalLabel\">\r\n                Withdraw\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <label htmlFor=\"amount\" className=\"form-label\">\r\n                Amount\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"amount\"\r\n                placeholder=\"Enter Amount Here\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={toConfirmation}\r\n                data-bs-dismiss=\"modal\"\r\n                data-bs-target=\"#confirmClientWithdrawModal\"\r\n              >\r\n                Enter\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        open={confirmationModal}\r\n        onClose={() => { setConfirmationModal(false) }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={confirmationModal}>\r\n          <Box className=\"confirmationModal\">\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"confirmClientWithdrawModalLabel\">\r\n                    Transaction Details\r\n                  </h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-close\"\r\n                    onClick={()=>setConfirmationModal(false)}\r\n                  ></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <p className=\"lbl-1\">\r\n                    Account Name: <span className=\"lbl-2\">{account.name}</span>\r\n                  </p>\r\n                  <p className=\"lbl-1\">\r\n                    Account Number:{\" \"}\r\n                    <span className=\"lbl-2\">{props.accountNumber}</span>\r\n                  </p>\r\n                  <p className=\"lbl-1\">\r\n                    Withdraw Amount: <span className=\"lbl-2\">&#x20B1;{amount}</span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    onClick={handleWithdraw}\r\n                    data-bs-dismiss=\"modal\"\r\n                  >\r\n                    CONFIRM\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Box>\r\n        </Fade>\r\n      </Modal>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientWithdraw;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport TransactionAlert from \"./TransactionAlert\";\r\nimport { Fade, Modal, Backdrop, Box } from \"@material-ui/core\";\r\n\r\nconst ClientTransfer = (props) => {\r\n  const [amount, setAmount] = useState(0);\r\n  const [alert, setAlert] = useState(\"\");\r\n  const [animationDelay, setAnimationDelay] = useState(\"\");\r\n  const [receipientAccountNumber, setReceipientAccountNumber] = useState(\"\");\r\n  const [confirmationModal, setConfirmationModal] = useState('');\r\n  let senderAccount = JSON.parse(localStorage.getItem(props.accountNumber));\r\n  const [severity, setSeverity] = useState(\"\");\r\n\r\n  let receiverAccount = JSON.parse(\r\n    localStorage.getItem(receipientAccountNumber)\r\n  );\r\n\r\n  const [receiverName, setReceiverName] = useState(\"\");\r\n\r\n  function addZeroes(num) {\r\n    return Number(num).toFixed(2)\r\n  }\r\n\r\n  const alertHandler = () => {\r\n    let message = \"\";\r\n    if (severity === \"error\") {\r\n      senderAccount.balance < amount\r\n        ? (message = \"Sorry, you got insufficient funds for your request\")\r\n        : senderAccount.balance === 0\r\n          ? (message = \"Please enter a valid amount\")\r\n          : (message = \"The account number you entered is invalid\");\r\n    } else message = \"Your funds have been transferred\";\r\n    setTimeout(() => {\r\n      setAnimationDelay(false);\r\n      setTimeout(() => {\r\n        setAlert(false);\r\n      }, 500);\r\n    }, 5000);\r\n    return (\r\n      <TransactionAlert\r\n        aDelay={animationDelay}\r\n        sAnimationDelay={setAnimationDelay}\r\n        sAlert={setAlert}\r\n        message={message}\r\n        severity={severity}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleTransfer = () => {\r\n    senderAccount.balance =\r\n      parseFloat(senderAccount.balance) - parseFloat(amount);\r\n    receiverAccount.balance =\r\n      parseFloat(receiverAccount.balance) + parseFloat(amount);\r\n\r\n    localStorage.setItem(props.accountNumber, JSON.stringify(senderAccount));\r\n    localStorage.setItem(\r\n      receipientAccountNumber,\r\n      JSON.stringify(receiverAccount)\r\n    );\r\n    !props.refreshCheck ? props.refresher(true) : props.refresher(false);\r\n    setConfirmationModal(false)\r\n    setAlert(true);\r\n    setAnimationDelay(true);\r\n    setSeverity(\"success\");\r\n    saveToTransactionHistory();\r\n    setReceipientAccountNumber();\r\n    setAmount(0)\r\n  };\r\n\r\n  const handleDisplayName = () => {\r\n    if (senderAccount.balance > amount && receiverAccount !== null && senderAccount.id !== receiverAccount.id) {\r\n      setReceiverName(receiverAccount.name);\r\n      setConfirmationModal(true)\r\n    }\r\n    else {\r\n      setSeverity(\"error\");\r\n      setAlert(true);\r\n      setAnimationDelay(true);\r\n    }\r\n  };\r\n\r\n  const saveToTransactionHistory = () => {\r\n    let receiverAccount = JSON.parse(\r\n      localStorage.getItem(receipientAccountNumber)\r\n    );\r\n    let d = new Date();\r\n    let date = d.getDate();\r\n    let month = d.getMonth() + 1;\r\n    let dateToBeSaved = `${month}/${date}`;\r\n    let transactions = senderAccount.transactions;\r\n    transactions.push({\r\n      title: \"Transfer\",\r\n      date: dateToBeSaved,\r\n      amount: `-${addZeroes(Number(amount))}`,\r\n    });\r\n    localStorage.setItem(senderAccount.id, JSON.stringify(senderAccount));\r\n    transactions = receiverAccount.transactions;\r\n    transactions.push({\r\n      title: \"Transfer\",\r\n      date: dateToBeSaved,\r\n      amount: `+${addZeroes(Number(amount))}`,\r\n    });\r\n    localStorage.setItem(receiverAccount.id, JSON.stringify(receiverAccount));\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {alert ? alertHandler() : <></>}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"clientTransferModal\"\r\n        tabindex=\"-1\"\r\n        aria-labelledby=\"clientTransferModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"clientTransferModalLabel\">\r\n                Transfer\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <label htmlFor=\"receipient\" className=\"form-label\">\r\n                Receipient\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                id=\"receipient\"\r\n                placeholder=\"Enter Acount Number Here\"\r\n                value={receipientAccountNumber}\r\n                onChange={(e) => setReceipientAccountNumber(e.target.value)}\r\n                required\r\n              />\r\n\r\n              <label htmlFor=\"amount\" className=\"form-label\">\r\n                Amount\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                id=\"amount\"\r\n                placeholder=\"Enter Amount Here\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                onClick={handleDisplayName}\r\n                className=\"btn btn-danger\"\r\n                data-bs-dismiss=\"modal\"\r\n                data-bs-target=\"#confirmTransferModal\"\r\n                data-bs-toggle=\"modal\"\r\n              >\r\n                Enter\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal\r\n        open={confirmationModal}\r\n        onClose={() => { setConfirmationModal(false) }}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={confirmationModal}>\r\n          <Box className=\"confirmationModal\">\r\n            <div className=\"modal-dialog modal-dialog-centered\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"confirmTransferModalLabel\">\r\n                    Transaction Details\r\n                  </h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-close\"\r\n                    onClick={()=>setConfirmationModal(false)}\r\n                  ></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <h3 className=\"m-0 pl-2 pt-2\">Receipient</h3>\r\n                  <p className=\"lbl-1 mb-0\">\r\n                    Account Name: <span className=\"lbl-2\">{receiverName}</span>\r\n                  </p>\r\n                  <p className=\"lbl-1\">\r\n                    Account Number:\r\n                    <span className=\"lbl-2\"> {receipientAccountNumber}</span>\r\n                  </p>\r\n\r\n                  <p className=\"lbl-1 border-top pt-3 mb-0\">\r\n                    Transfer Amount: <span className=\"lbl-2\">&#x20B1;{amount}</span>\r\n                  </p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    data-bs-dismiss=\"modal\"\r\n                    onClick={handleTransfer}\r\n                  >\r\n                    CONFIRM\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Box>\r\n        </Fade>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientTransfer;\r\n","import { useState } from \"react\"\r\n\r\n\r\nconst TransactionHistory = ({ id }) => {\r\n    let user = JSON.parse(localStorage.getItem(id))\r\n    let transactions = [];\r\n    \r\n    for (let i = 0; i < user.transactions.length; i++) {\r\n        let transaction = user.transactions[i];\r\n        transactions.push(transaction);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container transactions overflow-auto mt-3\">\r\n            {transactions.length === 0 ? <div className=\"d-flex justify-content-center align-items-center h-100\">You got no transactions yet!</div> : \r\n            user.transactions.map((transaction) => (\r\n                <div className=\"row transaction border-bottom p-2\">\r\n                    <div className=\"col\">\r\n                        <strong>{transaction.title}</strong><br />\r\n                        <small className=\"text-muted\">{transaction.date}</small>\r\n                    </div>\r\n                    <div className=\"col text-end\">\r\n                        {transaction.amount}\r\n                    </div>\r\n                </div>\r\n            )).reverse()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TransactionHistory","import Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { useState } from \"react\";\r\nimport { LineChart, Line, Tooltip, Legend, XAxis,YAxis, CartesianGrid } from \"recharts\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Box} from '@material-ui/core';\r\n\r\nconst Graph = ({id, open, setOpen}) => {\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        modal: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }\r\n    }));\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    let d = new Date();\r\n    let date = d.getDate();\r\n    let month = d.getMonth()+1;\r\n    let currentDate = `${month}/${date}`;\r\n\r\n    const user = JSON.parse(localStorage.getItem(id))\r\n    const data = user.balanceHistory\r\n    console.log(data)\r\n    if(data[data.length-1].name !== currentDate){\r\n        data.push({'name': currentDate, 'balance': user.balance})\r\n        localStorage.setItem(id, JSON.stringify(user))\r\n    }\r\n\r\n    console.log(data)\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                className={classes.modal + ' container'}\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <Box className=\"graphModal p-4\">\r\n                    <LineChart\r\n                        width={300}\r\n                        height={300}\r\n                        data={data}\r\n                        margin={{\r\n                            top: 5,\r\n                            right: 30,\r\n                            left: 20,\r\n                            bottom: 5\r\n                        }}\r\n                    >\r\n                        <XAxis dataKey=\"name\" />\r\n                        <YAxis/>\r\n                        <Tooltip />\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <Line\r\n                            dot={{ stroke: '#ff4d2e' }}\r\n                            strokeWidth={6}\r\n                            type=\"monotone\"\r\n                            dataKey=\"balance\"\r\n                            stroke=\"tomato\"\r\n                            activeDot={{ r: 8 }}\r\n                        />\r\n                        <Legend />\r\n                    </LineChart>\r\n                    </Box>\r\n                </Fade>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Graph\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nconst GambleModal = (props) => {\r\n  const [randomNumber, setRandomNumber] = useState(0);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const [inputNum, setInputNum] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let counter;\r\n    if (toggle) {\r\n      counter = setInterval(\r\n        () => setRandomNumber(Math.floor(Math.random() * 2)),\r\n        50\r\n      );\r\n    }\r\n    return () => {\r\n      clearInterval(counter);\r\n    };\r\n  }, [toggle]);\r\n\r\n  const handleGenerateNumber = () => {\r\n    setToggle(true);\r\n    setTimeout(() => {\r\n      setToggle(false);\r\n    }, 5000);\r\n\r\n    if (inputNum === randomNumber) {\r\n      console.log(randomNumber, \"you won\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        class=\"modal fade\"\r\n        id=\"gamble\"\r\n        data-bs-backdrop=\"static\"\r\n        data-bs-keyboard=\"false\"\r\n        tabindex=\"-1\"\r\n        aria-labelledby=\"gambleLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div class=\"modal-dialog modal-dialog-centered\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header p-3 pt-0 pb-0\">\r\n              <h5 class=\"modal-title \" id=\"gambleLabel\">\r\n                <span style={{ fontSize: \"2.5rem\" }}>&#x2660;</span>INSTACASH\r\n              </h5>\r\n\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <p>{randomNumber}</p>\r\n              <input\r\n                type=\"number\"\r\n                id=\"inputNum\"\r\n                placeholder=\"Enter Amount Here\"\r\n                value={inputNum}\r\n                onChange={(e) => setInputNum(e.target.value)}\r\n              />\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-primary\"\r\n                onClick={handleGenerateNumber}\r\n              >\r\n                Start game\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GambleModal;\r\n","import { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Card from \"./Card\";\r\nimport ClientDeposit from \"./ClientDeposit\";\r\nimport ClientWithdraw from \"./ClientWithdraw\";\r\nimport ClientTransfer from \"./ClientTransfer\";\r\nimport TransactionHistory from \"./TransactionHistory\";\r\nimport Graph from \"./Graph\";\r\nimport GambleModal from \"./GambleModal\";\r\nimport { LocalAtm, Sync, AccountBalance, Timeline } from '@material-ui/icons'\r\nimport { LineChart, Line, Tooltip, Legend, XAxis, YAxis, CartesianGrid } from \"recharts\";\r\n\r\nfunction HomePage() {\r\n\r\n  const passedState = useLocation();\r\n  const history = useHistory();\r\n  const [graphModal, setGraphModal] = useState('')\r\n  const [refresh, setRefresh] = useState(false);\r\n  const { state } = passedState;\r\n  try {\r\n  const user = state.verify;\r\n  const data = JSON.parse(localStorage.getItem(user.id))\r\n  console.log(user);\r\n\r\n  \r\n  \r\n    return (\r\n      <div className=\"container\">\r\n        {/* modals */}\r\n        <ClientWithdraw\r\n          refreshCheck={refresh}\r\n          refresher={setRefresh}\r\n          key={user.id}\r\n          balance={user.balance}\r\n          accountNumber={user.id}\r\n        />\r\n\r\n        <ClientDeposit\r\n          refreshCheck={refresh}\r\n          refresher={setRefresh}\r\n          key={user.id}\r\n          balance={user.balance}\r\n          accountNumber={user.id}\r\n        />\r\n\r\n        <ClientTransfer\r\n          refreshCheck={refresh}\r\n          refresher={setRefresh}\r\n          key={user.id}\r\n          balance={user.balance}\r\n          accountNumber={user.id}\r\n        />\r\n\r\n        <GambleModal />\r\n\r\n        <Graph open={graphModal} setOpen={setGraphModal} id={user.id} />\r\n        <div className=\"row vh-100\">\r\n          <div className=\"col-lg-6 d-flex flex-column justify-content-center align-items-center\">\r\n            <div className=\"card shadow w-100 mt-1\">\r\n              <div className=\"card-body d-flex flex-column justify-content-center align-items-center\">\r\n                <Card id={user.id} />\r\n                <div className=\"buttons mt-4 d-flex flex-column justify-content-center align-items-center\">\r\n                  <div className=\"btn-group\" role=\"group\" aria-label=\"Nav\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-outline-danger\"\r\n                      data-bs-toggle=\"modal\"\r\n                      data-bs-target=\"#clientDepositModal\"\r\n                    >\r\n                      <AccountBalance />\r\n                      <br />\r\n                      Deposit\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-outline-danger\"\r\n                      data-bs-toggle=\"modal\"\r\n                      data-bs-target=\"#clientTransferModal\"\r\n                    >\r\n                      <Sync />\r\n                      <br />\r\n                      Transfer\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn btn-outline-danger\"\r\n                      data-bs-toggle=\"modal\"\r\n                      data-bs-target=\"#clientWithdrawModal\"\r\n                      data-bs-dismiss=\"modal\"\r\n                    >\r\n                      <LocalAtm />\r\n                      <br />\r\n                      Withdraw\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-outline-danger gambleButton disabled\" data-bs-toggle=\"modal\" data-bs-target=\"#gamble\"><i class=\"fas fa-dice\"></i><br />Gamble</button>\r\n                  </div>\r\n                  <div class=\"btn-group mt-2 subButtons\" role=\"group\">\r\n                    <button type=\"button\" class=\"btn btn-outline-danger disabled\" data-bs-toggle=\"modal\" data-bs-target=\"#gamble\" ><i class=\"fas fa-dice\"></i><br />Gamble</button>\r\n                    <button type=\"button\" class=\"btn btn-outline-danger\" onClick={() => setGraphModal(true)}><Timeline /><br />Graph</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"graph\">\r\n              <LineChart\r\n                width={500}\r\n                height={280}\r\n                data={data.balanceHistory}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5\r\n                }}\r\n              >\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <Line\r\n                  dot={{ stroke: '#ff4d2e' }}\r\n                  strokeWidth={6}\r\n                  type=\"monotone\"\r\n                  dataKey=\"balance\"\r\n                  stroke=\"tomato\"\r\n                  activeDot={{ r: 8 }}\r\n                />\r\n                <Legend />\r\n              </LineChart>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"col-lg-6\">\r\n            <TransactionHistory id={user.id} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  catch {\r\n    history.push({pathname:\"/unauthorized\"})\r\n    return null\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import Logo from \"./Logo\";\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div id=\"notfound\">\r\n            <Logo/>\r\n            <div class=\"notfound\">\r\n                <div class=\"notfound-404\">\r\n                    <h3>Oops! Page not found</h3>\r\n                    <h1><span>4</span><span>0</span><span>4</span></h1>\r\n                </div>\r\n                <h2>we are sorry, but the page you requested was not found</h2>\r\n                <button className=\"btn btn-danger\" type=\"button\" onClick={()=>{window.history.back();}}>Go Back</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound","import Logo from \"./Logo\";\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nconst Unauthorized = () => {\r\n    const history = useHistory()\r\n    return (\r\n        <div>\r\n            <div id=\"notfound\">\r\n            <Logo/>\r\n            <div class=\"notfound\">\r\n                <div class=\"notfound-404\">\r\n                    <h3>Oops! Missing Permissions</h3>\r\n                    <h1><span>4</span><span>0</span><span>1</span></h1>\r\n                </div>\r\n                <h2>Don't worry though, there is another way to go back home. </h2>\r\n                <button className=\"btn btn-danger\" type=\"button\" onClick={()=>{history.push({pathname:\"/\"})}}>Go Back</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Unauthorized\r\n","import LoginPage from \"./components/LoginPage.js\";\r\nimport Admin from \"./components/Admin.js\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Unauthorized from \"./components/Unauthorized\"\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\n\r\nwindow.localStorage.setItem(\r\n  \"00\",\r\n  JSON.stringify({ email: \"admin@gmail.com\", password: \"admin\", isAdmin: true, isLoggedIn: false })\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LoginPage} />\r\n          <Route exact path=\"/home\" component={HomePage} />\r\n          <Route exact path=\"/admin\" component={Admin} />\r\n          <Route exact path=\"/unauthorized\" component={Unauthorized}/>\r\n          <Route component={NotFound}/>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}